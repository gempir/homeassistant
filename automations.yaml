- id: letsencrypt-renewal
  alias: "Let's Encrypt Renewal"
  initial_state: true
  trigger:
      - platform: time
        at: '00:00:00'
  action:
      - service: hassio.addon_restart
        data:
          addon: core_letsencrypt
          
# Motion
- alias: "Kitchen Light on Motion"
  initial_state: true
  trigger:
      - platform: state
        entity_id: binary_sensor.kitchen_motion
        to: "on"
  action:
      - service: light.turn_on
        entity_id: light.kitchen_ceiling_light
        
- alias: "Kitchen Light off after 1 Minute"
  initial_state: true
  trigger:
      - platform: state
        entity_id: binary_sensor.kitchen_motion
        to: "off"
        for:
            minutes: 1
  action:
    service: light.turn_off
    entity_id: light.kitchen_ceiling_light
            
            
- alias: "Entry Light on Motion"
  initial_state: true
  trigger:
      - platform: state
        entity_id: binary_sensor.entryway_motion
        to: "on"
  action:
      - service: light.turn_on
        entity_id: light.entryway_ceiling_light
        
- alias: "Entry Light off after 1 Minute"
  initial_state: true
  trigger:
      - platform: state
        entity_id: binary_sensor.entryway_motion
        to: "off"
        for:
            minutes: 1
  action:
    service: light.turn_off
    entity_id: light.entryway_ceiling_light


## Wallswitches
- alias: "Office Right Light Switch"
  initial_state: true
  trigger:
      platform: state
      entity_id: sensor.office_switch
  condition:
      condition: template
      value_template: >
          {{ trigger.to_state is not none and trigger.to_state.state == 'left' }}
  action:
      - service: light.toggle
        data:
            entity_id: light.living_room_ceiling_light
            
- alias: "Office Left Light Switch"
  initial_state: true
  trigger:
      platform: state
      entity_id: sensor.office_switch
  condition:
      condition: template
      value_template: >
          {{ trigger.to_state is not none and trigger.to_state.state == 'right' }}
  action:
      - service: light.toggle
        data:
            entity_id: light.computer_light
            
- alias: "Bedroom Left Light Switch"     
  trigger:
      platform: state
      entity_id: sensor.bedroom_switch
  condition:
      condition: template
      value_template: >
          {{ trigger.to_state is not none and trigger.to_state.state == 'right' }}
  action:
      - service: light.toggle
        data:
            entity_id: light.bed_light
            
- alias: "Bedroom Right Light Switch"
  initial_state: true
  trigger:
      platform: state
      entity_id: sensor.bedroom_switch
  condition:
      condition: template
      value_template: >
          {{ trigger.to_state is not none and trigger.to_state.state == 'left' }}
  action:
      - service: light.toggle
        data:
            entity_id: light.toilet_ceiling_light
          
# IKEA DIMMERS
## OFFICE
- alias: Office Dimmer off
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.office_dimmer
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state|int == 0 }}"
  action:
    service: light.turn_off
    entity_id: light.office_ceiling_light
- alias: Office Dimmer on
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.office_dimmer
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state|int != 0 }}"
  action:
    service: light.turn_on
    entity_id: light.office_ceiling_light
    data_template:
      brightness: "{{ trigger.to_state.state|int }}"
## Entryway
- alias: Entryway Dimmer off
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.entryway_dimmer
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state|int == 0 }}"
  action:
    service: light.turn_off
    entity_id: light.entryway_ceiling_light
- alias: Entryway Dimmer on
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.entryway_dimmer
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state|int != 0 }}"
  action:
    service: light.turn_on
    entity_id: light.entryway_ceiling_light
    data_template:
      brightness: "{{ trigger.to_state.state|int }}"
## Storage
- alias: Storage Dimmer off
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.storage_dimmer
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state|int == 0 }}"
  action:
    service: light.turn_off
    entity_id: light.storage_ceiling_light
- alias: Storage Dimmer on
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.storage_dimmer
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state|int != 0 }}"
  action:
    service: light.turn_on
    entity_id: light.storage_ceiling_light
    data_template:
      brightness: "{{ trigger.to_state.state|int }}"
## Toilet
- alias: Toilet Dimmer off
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.toilet_dimmer
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state|int == 0 }}"
  action:
    service: light.turn_off
    entity_id: light.toilet_ceiling_light
- alias: Toilet Dimmer on
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.toilet_dimmer
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state|int != 0 }}"
  action:
    service: light.turn_on
    entity_id: light.toilet_ceiling_light
    data_template:
      brightness: "{{ trigger.to_state.state|int }}"
## Bedroom
- alias: Bedroom Dimmer off
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.bedroom_dimmer
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state|int == 0 }}"
  action:
    service: light.turn_off
    entity_id: light.bedroom_ceiling_light
- alias: Bedroom Dimmer on
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.bedroom_dimmer
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state|int != 0 }}"
  action:
    service: light.turn_on
    entity_id: light.bedroom_ceiling_light
    data_template:
      brightness: "{{ trigger.to_state.state|int }}"
      
      